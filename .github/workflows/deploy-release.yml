name: Deploy Release

on:
  push:
    branches:
      - release
      - feat/deploy-process

jobs:
  terraform:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'terraform/')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for terraform changes
        id: terraform-changed
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^terraform/"; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

      - name: Setup Terraform
        if: steps.terraform-changed.outputs.changed == 'true'
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        if: steps.terraform-changed.outputs.changed == 'true'
        run: |
          cd terraform
          terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Apply
        if: steps.terraform-changed.outputs.changed == 'true'
        run: |
          cd terraform
          terraform apply -auto-approve
        env:
          TF_VAR_db_admin_username: ${{ secrets.DB_ADMIN_USERNAME }}
          TF_VAR_db_admin_password: ${{ secrets.DB_ADMIN_PASSWORD }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  deploy_database:
    needs: [terraform]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Database Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd backend
          pip install poetry
          poetry install
          poetry run alembic upgrade head

  deploy_backend:
    needs: [terraform, deploy_database]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # 変更を検出するために履歴を2つ取得

      - name: Check for backend changes
        id: backend-changed
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^backend/"; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

      - name: Azure Login
        if: steps.backend-changed.outputs.changed == 'true'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push Docker image (backend)
        if: steps.backend-changed.outputs.changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}

      - name: Deploy to Azure Web App (backend)
        if: steps.backend-changed.outputs.changed == 'true'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.BACKEND_WEBAPP_NAME }}
          images: ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}

  deploy_frontend:
    needs: [terraform, deploy_backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # 変更を検出するために履歴を2つ取得

      - name: Check for frontend changes
        id: frontend-changed
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^frontend/"; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

      - name: Azure Login
        if: steps.frontend-changed.outputs.changed == 'true'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push Docker image (frontend)
        if: steps.frontend-changed.outputs.changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}

      - name: Deploy to Azure Web App (frontend)
        if: steps.frontend-changed.outputs.changed == 'true'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.FRONTEND_WEBAPP_NAME }}
          images: ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}